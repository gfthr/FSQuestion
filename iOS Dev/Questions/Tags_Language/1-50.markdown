1. [Do-While and if-else statements in C/C++ macros](http://stackoverflow.com/questions/154136/do-while-and-if-else-statements-in-c-c-macros)

	C/C++宏中的`Do-While`和`if-else`。对宏处理的不同情况，解释的很详细。

2. [What is the name of this operator: “-->”?](http://stackoverflow.com/questions/1642028/what-is-the-name-of-this-operator)

	操作符"-->"的名字。`while(x --> 0)`这里的这个操作符是这样理解：`while( (x--) > 0)`。

3. [Why doesn't GCC optimize a*a*a*a*a*a to (a*a*a)*(a*a*a)?](http://stackoverflow.com/questions/6430448/why-doesnt-gcc-optimize-aaaaaa-to-aaaaaa)
	
	为什么GCC不优化`a*a*a*a*a*a`为`(a*a*a)*(a*a*a)`。大多数编译器对浮点数计算的重新排序是很保守的，除非他们肯定结果是一样的，或者你告诉他们你不关心数值上的精确度。你可看[the -ffast-math option](http://gcc.gnu.org/onlinedocs/gcc-4.1.1/gcc/Optimize-Options.html#Optimize-Options)。
	
4. [http://stackoverflow.com/questions/9229601/what-is-in-c-code](http://stackoverflow.com/questions/9229601/what-is-in-c-code)

	C代码中`:-!!`是什么意思，`#define BUILD_BUG_ON_ZERO(e) (sizeof(struct { int:-!!(e); }))`，`#define BUILD_BUG_ON_NULL(e) ((void *)sizeof(struct { int:-!!(e); }))` 是什么意思。其中[bitfield 位段](http://zh.wikipedia.org/wiki/%E4%BD%8D%E6%AE%B5)。这里，宏的意思是检查表达式e的值是不是0，不是0的话，在build的时候fail。sizeof 求 负的宽度的时候会抱编译错误。
	
5. [What is a typedef enum in Objective-C?](http://stackoverflow.com/questions/707512/what-is-a-typedef-enum-in-objective-c)

	Objective-C的枚举。详细描述了枚举写法的来龙去脉。[C语言详解－枚举类型](http://www.cnblogs.com/JCSU/articles/1299051.html)。

6. [With C arrays, why is it the case that a[5] == 5[a] ?](http://stackoverflow.com/questions/381542/with-c-arrays-why-is-it-the-case-that-a5-5a)

	在C数组中，为什么`a[5] == 5[a]`? C标准定义了`[]`:`a[b] == *(a + b)`。因此`a[5] = *(a + 5)`，`5[a] = *(5 + a)`。但相反的却是不行，`[a]5`和`[5]a`，会导致语法错误，反向操作符(dereference operator)应放置在地址前，而不是地址后面。
	
7. [How do you set, clear and toggle a single bit in C/C++?](http://stackoverflow.com/questions/47981/how-do-you-set-clear-and-toggle-a-single-bit-in-c-c)

	如何设置、清除、开关某位。基本操作，简单明了。

8. [Why does the C preprocessor interpret the word “linux” as the constant “1”?](http://stackoverflow.com/questions/19210935/why-does-the-c-preprocessor-interpret-the-word-linux-as-the-constant-1)

	为什么C预处理器将`linux`翻译成常量`1`。他并不是在头文件定义的，而是编译器自己设置的。等等这些来龙去脉。

9. [Divide a number by 3 without using *, /, +, -, % operators](http://stackoverflow.com/questions/11694546/divide-a-number-by-3-without-using-operators)

	number不用`*、/、+、-、%`操作符来被3除。用位操作来完成。

10. [Do I cast the result of malloc?](http://stackoverflow.com/questions/605845/do-i-cast-the-result-of-malloc)

	强制类型转换malloc。不要加返回类型。有不少原因，如隐藏了错误、没必要等等。

11. [The Definitive C Book Guide and List](http://stackoverflow.com/questions/562303/the-definitive-c-book-guide-and-list)

	C书籍列表。[C++书籍列表](http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list)。

12. [What does the C ??!??! operator do?](http://stackoverflow.com/questions/7825055/what-does-the-c-operator-do)

	`!ErrorHasOccured() ??!??! HandleError();`中`??!`是什么意思。`??!`=`|`。`??!`是[trigraph](http://en.wikipedia.org/wiki/Digraphs_and_trigraphs#C)三连字。传说是为了照顾老一辈键盘上没有像`|`这样的字符才出现的。

13. [Undefined Behavior and Sequence Points](http://stackoverflow.com/questions/4176328/undefined-behavior-and-sequence-points)

	Undefined Behavior and Sequence Points,未定义行为和序列点。描述了未定义行为，副作用(side effect)，和序列点，这几个概念。你还可以参考[C语言 side effect 和 sequence point](http://19880512.blog.51cto.com/936364/283520)、[未定义行为](http://zh.wikipedia.org/wiki/%E6%9C%AA%E5%AE%9A%E4%B9%89%E8%A1%8C%E4%B8%BA)、[深入解析序列点](http://blog.csdn.net/huiguixian/article/details/6438613)和[What Every C Programmer Should Know About Undefined Behavior](http://blog.llvm.org/2011/05/what-every-c-programmer-should-know.html)。

14. [Can code that is valid in both C and C++ produce different behavior when compiled in each language?](http://stackoverflow.com/questions/12887700/can-code-that-is-valid-in-both-c-and-c-produce-different-behavior-when-compile)

	C和C++。参看[Incompatibilities Between ISO C and ISO C++](http://david.tribble.com/text/cdiffs.htm)。

15. [What is the difference between #include <filename> and #include “filename”?](http://stackoverflow.com/questions/21593/what-is-the-difference-between-include-filename-and-include-filename)

	`#include <filename>`和`#include "filename"`区别。可以参考[The #include Directive](http://gcc.gnu.org/onlinedocs/gcc-2.95.3/cpp_1.html#SEC6)。`#include <filename>`搜索你指定的和系统目录标准列表。`#include "filename"`是自己程序的头文件。

16. [Why does sizeof(x++) not increment x?](http://stackoverflow.com/questions/8225776/why-does-sizeofx-not-increment-x)

	为什么`sizeof(x++)`中，x值没有增加。根据[C99标准](http://www.open-std.org/JTC1/sc22/wg14/www/docs/n1256.pdf)，如果`sizeof`中的运算元是可变长度数组类型的，那么运算元会执行；否是是不会执行的。

17. [Why does a function with no parameters (compared to the actual function definition) compile?](http://stackoverflow.com/questions/13950642/why-does-a-function-with-no-parameters-compared-to-the-actual-function-definiti)

	为什么一个函数定义的时候没有参数，而实际实现的时候有参数。

18. [Which is better option to use for dividing an integer number by 2?](http://stackoverflow.com/questions/10681375/which-is-better-option-to-use-for-dividing-an-integer-number-by-2)

	被2除，那个方法更好。有两个方法，要是你将数字当成比特位，那么位移；要是当成数值，那么除法。并且两者的结果并不尽相同。

19. [In C++ source, what is the effect of extern “C”?](http://stackoverflow.com/questions/1041866/in-c-source-what-is-the-effect-of-extern-c)

	在C++中，extern "C"的效果。还可以参看[C和C++函数的相互引用 extern "c"深入理解](http://elisawell.blog.163.com/blog/static/17146288120123204577218/),[extern用法详解(转)](http://www.cnblogs.com/luliang/archive/2008/08/21/1272746.html)。

20. [Unit Testing C Code](http://stackoverflow.com/questions/65820/unit-testing-c-code)

	C代码的单元测试。相关框架有[Check](http://check.sourceforge.net/)，[C框架列表](http://check.sourceforge.net/doc/check_html/check_2.html#SEC3)。

21. [How to initialize an array in C](http://stackoverflow.com/questions/201101/how-to-initialize-an-array-in-c)

	如何初始化C中的数组。

22. [Where do I find the current C or C++ standard documents?](http://stackoverflow.com/questions/81656/where-do-i-find-the-current-c-or-c-standard-documents)

	当前C或者C++标准文档。

23. [Why can't variables be declared in a switch statement?](http://stackoverflow.com/questions/92396/why-cant-variables-be-declared-in-a-switch-statement)

	为什么不能在switch 语句中声明变量。这是因为switch的case相当于goto，每个statement相当于label，作用域是整个switch，所以你需要用{}来限制变量的作用域后才能使用。详细可看[在switch-case中定义变量时当心被“穿越”](http://blog.csdn.net/tonywearme/article/details/7075809)

24. [What is the strict aliasing rule?](http://stackoverflow.com/questions/98650/what-is-the-strict-aliasing-rule)

	什么是strict aliasing rule。你还可以参看[GCC strict aliasing](http://www.dutor.net/index.php/2012/07/gcc-strict-aliasing/)。

25. [What's the purpose of using { … } for a single line?](http://stackoverflow.com/questions/12193170/whats-the-purpose-of-using-for-a-single-line)

	为单行使用{...}。介绍了些代码规范。

26. [What is the difference between a definition and a declaration?](http://stackoverflow.com/questions/1410563/what-is-the-difference-between-a-definition-and-a-declaration)

	定义(definition)和声明(declaration)的区别。